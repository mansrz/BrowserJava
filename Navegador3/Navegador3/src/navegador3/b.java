/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package navegador3;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.SSLSocketFactory;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author Cesar Madrid
 */
public class b extends javax.swing.JFrame {

    Socket conexion=new Socket();
    /**
     * Creates new form b
     */
    public b() {
        initComponents();
        pantalla.setContentType("text/html");
        pantalla.setEditable(false);
        pantalla.addHyperlinkListener(new HyperlinkListener() {
            public void hyperlinkUpdate(HyperlinkEvent e) {
                if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    getHTML(e.getURL().toExternalForm());
                }}});
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        url = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pantalla = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        url.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                urlKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(pantalla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE)
                    .addComponent(url))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_urlKeyPressed

        int key = evt.getKeyCode();
        String host = url.getText();
        if(key == KeyEvent.VK_ENTER){
            getHTML(host);
            
            
            
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_urlKeyPressed

    public void getHTML(String host){
        
        boolean https=false;//para detectar que tipo de pagina abrire
        if(host.toUpperCase().contains("HTTPS://"))//verifico si es https y de ser asi cambio el booleano
            https=true;
        
        host = host.replaceAll("(?i)http://", "");
        host = host.replaceAll("(?i)https://", "");
        
        if(!host.contains("/"))
            host = host+"/";
       
        String dir = host.substring(0,host.indexOf("/"));
        System.out.println(dir);
        
        try {
                if(https)
                    conexion = SSLSocketFactory.getDefault().createSocket(dir, 443);//nuevo tipo de socket para conexion segura FIN
                else
                    conexion= new Socket(dir,80);
                String requerimiento="";
                requerimiento = "GET "+ host.substring(host.indexOf("/"))+" HTTP/1.1\n";
                requerimiento = requerimiento +"Host: "+dir+"\n";
                requerimiento = requerimiento + "User-Agent: Mozilla/5.0 (Macintosh)\n";
                requerimiento = requerimiento + "Connection: close\n\n";
                
                PrintWriter pw = new PrintWriter(conexion.getOutputStream());
                pw.print(requerimiento);
                pw.flush();
                
                BufferedReader br = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
                String charlie="";
                String linea;
                boolean continuar = true;
                while(continuar){
                    if((linea=br.readLine())==null)
                        break;
                    charlie=charlie+linea+"\n";
                    
                }
//            System.out.println(charlie);
                if(charlie.substring(9, 12).equals("302")||charlie.substring(9, 12).equals("301")){
                    int indice = charlie.indexOf("Location: ")+ "Location: ".length();
                    String temp = charlie .substring(indice);
                    getHTML(temp.substring(0, temp.indexOf("\n")));
                    url.setText(temp.substring(0, temp.indexOf("\n")));
                
                }else
                {   
                    
                    String ss=charlie.substring(charlie.indexOf("<"));
                    
                    ss=ss.replaceAll("<frame", "<ssss");
                    ss=ss.replaceAll("<meta", "<ssss");
                    System.out.println(ss);
                    pantalla.setText(ss);
                }
                
                conexion.close();
                
                
            
//                
                
                
                
            } catch (UnknownHostException ex) {
                Logger.getLogger(b.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(b.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new b().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane pantalla;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
